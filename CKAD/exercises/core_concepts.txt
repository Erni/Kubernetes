alias k=kubectl

# 1. Create a namespace called 'mynamespace' and a pod with image nginx called nginx on this namespace
k create ns mynamespace
k run nginx --image=nginx -n mynamespace

# 2. Create the pod that was just described using YAML
k run nginx --image=nginx -n mynamespace --dry-run=client -o yaml > pod.yml
vim pod.yml
k create -f pod.yml

# 3. Create a busybox pod (using kubectl command) that runs the command "env". Run it and see the output
kubectl run busybox --image=busybox --command --restart=Never -it --rm -- env # -it will help in seeing the output, --rm will immediately delete the pod after it exits

# OR

k run busybox --image=busybox -n mynamespace --dry-run=client -o yaml > busybox-pod.yml
########################
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: busybox
  name: busybox
spec:
  containers:
  - image: busybox
    name: busybox
    command: ['env']
########################

# 4. Get the YAML for a new namespace called 'myns' without creating it
k create ns myns --dry-run=client -o yaml

# 5. Get the YAML for a new ResourceQuota called 'myrq' with hard limits of 1 CPU, 1G memory and 2 pods without creating it
k create quota  myrq --dry-run=client -o yaml --hard=pods=2,cpu=1,memory=1G

# 6. Get pods on all namespaces
k get pods -A

# 7. Create a pod with image nginx called nginx and expose traffic on port 80
k run nginx --image=nginx --port=80 --dry-run=client -o yaml

# 8. Change pod's image to nginx:1.7.1. Observe that the container will be restarted as soon as the image gets pulled
k edit pod nginx

# 9. Get nginx pod's ip created in previous step, use a temp busybox image to wget its '/'
k get pod nginx -o wide
k run busybox --image=busybox --rm -it --restart=Never -- wget -O- 10.1.1.131:80

# 10. Get pod's YAML
k get pod busybox -o yaml

# 11. Get information about the pod, including details about potential issues (e.g. pod hasn't started)
k describe pod busybox

# 12. Get pod logs
k logs busybox

# 13. If pod crashed and restarted, get logs about the previous instance
k logs busybox --previous
k logs busybox -p

# 14. Execute a simple shell on the nginx pod
k exec -it nginx -- /bin/sh

# 15. Create a busybox pod that echoes 'hello world' and then exits
k run busybox --image=busybox --restart=Never -it -- echo 'hello world'

# 16. Do the same, but have the pod deleted automatically when it's completed
k run busybox --image=busybox --rm --restart=Never -it -- echo 'hello world'

# 17. Create an nginx pod and set an env value as 'var1=val1'. Check the env value existence within the pod
k run nginx --image=nginx -env=var1=val1 --dry-run=client -o yaml
k exec nginx -- env